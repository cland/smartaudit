@model SmartAudit.ViewModel.AuditViewModel
@{
    ViewBag.Title = "AuditForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var auditid = Model.Audit.Id;
    var thisAudit = Model.Audit;
    var sectionResults = thisAudit.SectionResults;
    var isnew = (auditid > 0 ? false : true);
    int[] months = Enumerable.Range(1, 12).ToArray();
    string[] monthnames = { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };
    int curMonth = (Model.Audit.Month != null ? (int)Model.Audit.Month : DateTime.Today.Month);
    var candidate = Model.Audit.Candidate;
    var fmt = "{0:0.0#}";
}

<h2>@(isnew ? "New" : "Update") Audit @Model.AuditDefinition.Id</h2>

<form id="AuditForm" action="">

    <div class="form-group">
        <label>Audit Definition:</label>
        <div class="tt-container">
            <input id="audit" name="audit" required data-rule-validAudit="true" type="text" value="@Model.AuditDefinition.Name" class="form-control" />
            <input id="auditid" name="auditDefinitionId" type="hidden" value="@Model.AuditDefinition.Id" required />
        </div>
    </div>

    <div class="form-group">
        <label>Period Type</label>
        <div class="tt-container">
            <select id="periodTypeId" name="PeriodTypeId" class="form-control" required>
                <option value="">Select One</option>
                @foreach (var item in Model.PeriodTypes)
                {
                    <option value="@item.Id" @(item == Model.Audit.PeriodType ? "Selected='True'" : "")>@item.Name</option>
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        <label>Year:</label>
        <div class="tt-container">
            <input id="year" name="Year" required type="number" value="@Model.Audit.Year" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Month:</label>
        <div class="tt-container">
            <select id="month" name="Month" class="form-control" required>
                <option value="">Select One</option>
                @foreach (var item in months)
                {
                    <option value="@item" @(item == curMonth ? "Selected='True'" : "")>@monthnames[item - 1]</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label>Quarter</label>
        <div class="tt-container">
            <select id="quarterId" name="QuarterId" class="form-control" required>
                <option value="">Select One</option>
                @foreach (var item in Model.Quarters)
            {
                    <option value="@item.Id" @(item == Model.Audit.Quarter ? "Selected='True'" : "")>@item.Name</option>
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        <label>Candidate:</label>
        <div class="tt-container">
            <input id="candidate" name="CandidateName" required data-rule-validCandidate="true" type="text" value="@Model.Audit.Candidate" class="form-control" />
            <input id="candidateid" name="CandidateId" required type="hidden" value="@(candidate != null?candidate.Id : 0)" />
        </div>
    </div>

    <div class="form-group">
        <label>Inspection Date</label>
        <div class="tt-container">
            <input id="dateOfInspection" name="DateOfInspection" required value="@Model.Audit.DateOfInspection" type="text" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label>Completion Date</label>
        <div class="tt-container">
            <input id="dateOfCompletion" name="DateInspectionCompleted" value="@Model.Audit.DateInspectionCompleted" type="text" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Status</label>
        <div class="tt-container">
            <select id="auditStatusId" name="AuditStatusId" class="form-control" required>
                <option value="">Select One</option>
                @foreach (var item in Model.AuditStates)
                {
                    <option value="@item.Id" @(item == Model.Audit.AuditStatus || item.Id == 1 ? "Selected='True'" : "")>@item.Name</option>
                }
            </select>
        </div>
    </div>
    <button class="btn btn-success">Save Audit Details</button>
    <button type="button" onclick="document.location.href='/Audit'" class="btn btn-danger">Close</button>
</form>
@if (!isnew)
{
    <h2>Sections And Questions</h2>
    <form id="MainAuditForm" name="MainAudit">

        <button name="Save-Audit" class="btn btn-success">Save Audit Results</button>
       
        @foreach (var sec in sectionResults)
        {
            var questionResults = sec.QuestionResults;
            <section id="@sec.Id" class="section-container">
                
                <h3 id="section-header-@sec.Id" class="section-header">
                    @sec.Name  | Section-Score
                </h3>
                <input type="hidden" name="Section_@sec.Id" />
                <div id="section-questions-@sec.Id" class="section-questions" data-sectionid="@sec.Id">
                    
                    @foreach (var que in questionResults)
                    {
                        bool isNewQ = (que.Id == 0 ? true : false);
                        var jqueryId = (isNewQ ? que.QuestionDefinition.DisplayNumber : que.Id.ToString());
                        var thisScoreA = (isNewQ ? "--" : que.ScoreA.ToString());
                        var thisScoreB = (isNewQ ? "--" : (String.Format(fmt, que.effectiveScoreB())));
                        <section class="questionInfo" data-questionid="@que.QuestionDefinition.Id">
                            <input type="hidden" name="QuestionDefinitionId" id="question-definitionid-@que.QuestionDefinition.Id" value="@que.QuestionDefinition.Id" />
                            <input type="hidden" name="Id" id="question-id-@jqueryId" value="@que.Id" />
                            <table id="table-@jqueryId" class="table table-condensed table-bordered">
                                <tr>
                                    <td>
                                        <span class="question-displayNumber">@que.QuestionDefinition.DisplayNumber</span>
                                        <span class="question-text">@que.QuestionDefinition.QuestionText</span>
                                    </td>
                                    <td><span class="question-weight">Weight: @que.QuestionDefinition.Weight</span></td>
                                    <td>
                                        <span class="score-a question-score-a">ScoreA:  @thisScoreA</span> | <span class="score-b question-score-b">ScoreB:  @thisScoreB</span> | <span class="@que.scoreDescription"></span> <br />
                                        <div class="checkbox">
                                            <label>
                                                <input id="qisapplicable-@jqueryId" name="IsNotApplicable" type="checkbox" value="true" @(que.IsNotApplicable ? "checked='checked'" : "") class="checkbox" /> Not Applicable @que.IsNotApplicable
                                            </label>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Guidelines: <span class="question-quideline">@que.QuestionDefinition.Guideline</span></td>
                                    <td><label>Sample Size:</label><span class="question-samplesize">@que.QuestionDefinition.SampleSize</span></td>
                                    <td>
                                        <label>Complied:</label>
                                        <div class="question-sampleactual">
                                            <input type="number" id="question-sampleactual-@jqueryId" name="SampleActual" class="form-control question-sampleactual" value="@que.SampleActual" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="4"><textarea id="question-sampledescription" name="SampleDescription" rows="5" class="form-control">@que.SampleDescription</textarea></td>
                                </tr>
                            </table>
                        </section>
                    }
                </div>
                <div id="section-footer-@sec.Id" class="section-footer">

                </div>
            </section>
        }

    </form>
}


@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            //candidates
            var candidates = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/candidates?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#candidate').typeahead({
                minLength: 2,
                highlight: true
            }, {
                name: 'candidates',
                display: 'name',
                source: candidates
            }).on("typeahead:select", function (e, candidate) {
                $("#candidateid").prop("value", candidate.id);
            });

            //validation
            $.validator.addMethod("validCandidate", function () {
                var candidateid = $("#candidateid").prop("value");
                return candidateid && candidateid !== 0;
            }, "Please select a valid candidate");

            var formdata = $("#AuditForm");
            var validator = formdata.validate({

                submitHandler: function () {
                    var _url = "/api/audits";
                    var _method = "POST";
                    if(@auditid > 0){
                        _url = "/api/audits/" + @auditid;
                        _method = "PUT";
                    }
                    console.log("Submitting form..." + _method);
                    $.ajax({
                        url: _url,
                        method: _method,
                        data: formdata.serialize()
                    })
                    .done(function () {
                        toastr.success("Audit recorded successfully!")
                        // $("#audit").typeahead("val", "");
                        if( @auditid < 1 ){

                        }
                        validator.resetForm();
                        //formdata.trigger("reset");
                    })
                    .fail(function () {
                        toastr.error("Error Occurred. Please fix and try again. ")

                    });
                    console.log("Returning false...")
                    return false;
                } //end submitHandler
            });

            //mainaudit results
            var formresults = $("#MainAuditForm");
            var validator = formresults.validate({

                submitHandler: function () {
                    var _url = "/api/audits/updateresults/@auditid";
                    var _method = "PUT";                                      
                    var jsondata = {};
                    var sections = [];
                    $(".section-questions").each(function () {
                        var sectionId = $(this).attr("data-sectionid");                        
                        var sectiondata = [];
                        $(this).find(".questionInfo").each(function (){
                            sectiondata[sectiondata.length] = $(this).serializeObject()
                        });
                        
                        sections[sections.length] = {"SectionId": sectionId, "questions": sectiondata};
                       
                    })
                    jsondata.AuditId = @auditid;
                    jsondata.AuditDefinitionId = @Model.AuditDefinition.Id;
                    jsondata.sections = sections;
                    
                    $.ajax({
                        url: _url,
                        method: _method,                       
                        data: jsondata
                    })
                   .done(function () {
                       toastr.success("Audit results recorded successfully!")
                       if( @auditid < 1 ){

                       }
                       validator.resetForm();
                       //formresults.trigger("reset");
                   })
                   .fail(function () {
                       toastr.error("Error Occurred While trying to update results. Please fix and try again. ")

                   });                 

                    return false;
                } //end submitHandler
            });

        });

        $.fn.serializeObject = function (data) {
            var els = $(this).find(':input').get();
            if (typeof data != 'object') {
                // return all data
                data = {};
                $.each(els, function () {
                    //&& (this.checked || /select|textarea/i.test(this.nodeName) || /text|hidden|password/i.test(this.type))
                    if(/checkbox/i.test(this.type)){
                        data[this.name] = this.checked;
                    } else if (this.name && !this.disabled) {
                        data[this.name] = $(this).val();
                    }
                });
                return data;
            }
        };
    </script>
}

